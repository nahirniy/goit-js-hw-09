{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrCG,EAAoBJ,SAASC,cAAc,SAC3CI,EAAmBL,SAASC,cAAc,UAgChD,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbJ,EAAkBW,iBAAiB,UA3CnC,SAAkBC,GAChBA,EAAEC,iBACFZ,EAAiBa,aAAa,WAAY,QAE1C,IAAIC,EAAQC,OAAOrB,EAAWsB,OAC1BC,EAAOF,OAAOlB,EAAUmB,OACxBE,EAASH,OAAOjB,EAAYkB,OAEhC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDlB,EAAckB,EAAUL,GACrBM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBrB,QAAiBC,MAAU,IAGnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,IAInDW,GAASG,EAGXlB,EAAkB2B,QAClBnB,YAAW,KACTP,EAAiB2B,gBAAgB,WAAW,GAC3Cb,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\nconst createPromiseForm = document.querySelector('.form');\nconst createPromiseBtn = document.querySelector('button');\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  createPromiseBtn.setAttribute('disabled', 'true');\n\n  let delay = Number(inputDelay.value);\n  let step = Number(inputStep.value);\n  let amount = Number(inputAmount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n  }\n\n  createPromiseForm.reset();\n  setTimeout(() => {\n    createPromiseBtn.removeAttribute('disabled');\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromiseForm.addEventListener('submit', onSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromiseForm","$47d4ff9957288465$var$createPromiseBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","setAttribute","delay1","Number","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","reset","removeAttribute"],"version":3,"file":"03-promises.50a2b9f5.js.map"}